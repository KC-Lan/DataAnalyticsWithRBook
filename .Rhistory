Yahoo_news = data.frame(title = news_css, url=news_url)
news_url
YahooNewsurl="https://tw.news.yahoo.com/"
news_title = read_html(YahooNewsurl) %>% html_nodes(".yom-list a") %>% html_text()
news_url = read_html(YahooNewsurl) %>% html_nodes(".yom-list a .title") %>% html_attr("href")
Yahoo_news = data.frame(title = news_css, url=news_url)
YahooNewsurl="https://tw.news.yahoo.com/"
news_title = read_html(YahooNewsurl) %>% html_nodes(".yom-list a") %>% html_text()
news_url = read_html(YahooNewsurl) %>% html_nodes(".yom-list a") %>% html_attr("href")
Yahoo_news = data.frame(title = news_css, url=news_url)
news_url
YahooNewsurl="https://tw.news.yahoo.com/"
news_title = read_html(YahooNewsurl) %>% html_nodes(".tpl-title a") %>% html_text()
news_url = read_html(YahooNewsurl) %>% html_nodes(".tpl-title a") %>% html_attr("href")
Yahoo_news = data.frame(title = news_css, url=news_url)
head(Yahoo_news)
YahooNewsurl="https://tw.news.yahoo.com/"
news_title = read_html(YahooNewsurl) %>% html_nodes(".tpl-title a") %>% html_text()
news_url = read_html(YahooNewsurl) %>% html_nodes(".tpl-title a") %>% html_attr("href")
Yahoo_news = data.frame(title = news_title, url=news_url)
head(Yahoo_news)
head(Yahoo_news)
install.packages("gmodels")
library(gmodels)
CrossTable(mydata$myrowvar, mydata$mycolvar)
library(gmodels)
CrossTable(mydata$myrowvar, mydata$mycolvar)
attach(mydata)
CrossTable(iris$Species,iris$Sepal.Length)
NBA1516DT
library(SportsAnalytics)
NBA1516<-fetch_NBAPlayerStatistics("15-16")
NBA1516DT<-data.table(NBA1516)
class(NBA1516DT)
library(data.table)
NBA1516DT<-data.table(NBA1516)
class(NBA1516DT)
NBA1516DT[grepl('James',Name)]
NBA1516DT[GamesPlayed>60]
NBA1516DT[GamesPlayed>70]
NBA1516DT[grepl('A',Name)&Position=="C"]
NBA1516DT[grepl('James',Name)]
NBA1516DT[,.(mean(GamesPlayed),mean(PersonalFouls),mean(Steals))]
NBA1516DT[,.(GamesPlayedMean=mean(GamesPlayed),PersonalFoulsMean=mean(PersonalFouls),StealsMean=mean(Steals))]
NBA1516DT[,.(GamesPlayedMax=max(GamesPlayed), #最大值
ThreesMadeMin=min(ThreesMade), #最小值
FieldGoalsMadeSD=sd(FieldGoalsMade))] #標準差
NBA1516DT[GamesPlayed>70,
.(ThreesMadeMean=mean(ThreesMade), FieldGoalsMadeMean=mean(FieldGoalsMade))]
NBA1516DT[,mean(Steals),by=Team]
NBA1516DT[Position=="C",
.(.N,ThreesAttemptedMean=mean(ThreesAttempted)),
by=Team]
install.packagess(c('rgdal','rgeos','maptools','ggmap','choroplethr','WDI','treemapify'))
install.packages(c('rgdal','rgeos','maptools','ggmap','choroplethr','WDI','treemapify'))
install.packages("choroplethrMaps")
install.packages("ggproto")
?GeomRasterAnn
install.packages("GeomRasterAnn")
install.packages("ggmap", type = "source")
WaterData<-fromJSON("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927")
WaterDataFrame<-WaterData$result$results
WaterDataFrame$longitude<-as.numeric(WaterDataFrame$longitude)
WaterDataFrame$latitude<-as.numeric(WaterDataFrame$latitude)
WaterDataFrame$qua_cntu<-as.numeric(WaterDataFrame$qua_cntu)
library(jsonlite)
WaterData<-fromJSON("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927")
WaterDataFrame<-WaterData$result$results
WaterDataFrame$longitude<-as.numeric(WaterDataFrame$longitude)
WaterDataFrame$latitude<-as.numeric(WaterDataFrame$latitude)
WaterDataFrame$qua_cntu<-as.numeric(WaterDataFrame$qua_cntu)
WaterDataFrame
library(ggmap)
TaipeiMap = get_map(location = c(121.43,24.93,121.62,25.19),
zoom = 11, maptype = 'roadmap')
TaipeiMapO = ggmap(TaipeiMap)+
geom_point(data=subset(WaterDataFrame,qua_cntu>=0),
aes(x=longitude, y=latitude,color=qua_cntu,size=3.5))+
scale_color_continuous(low = "yellow",high = "red")+
guides(size=FALSE)
TaipeiMapO
if (!require('rgdal')){#for fortify()
install.packages("rgdal");library(rgdal)
}
if (!require('rgeos')){#for fortify()
install.packages("rgeos");library(rgeos)
}
if (!require('maptools')){#for readShapeSpatial()
install.packages("maptools");library(maptools)
}
tw_new <- readShapeSpatial("Taiwan/Town_MOI_1041215.shp") #檔名
library(jsonlite)
WaterData<-fromJSON("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927")
WaterDataFrame<-WaterData$result$results
WaterDataFrame$longitude<-as.numeric(WaterDataFrame$longitude)
WaterDataFrame$latitude<-as.numeric(WaterDataFrame$latitude)
WaterDataFrame$qua_cntu<-as.numeric(WaterDataFrame$qua_cntu)
library(ggmap)
TaipeiMap = get_map(location = c(121.43,24.93,121.62,25.19),
zoom = 11, maptype = 'roadmap')
TaipeiMapO = ggmap(TaipeiMap)+
geom_point(data=subset(WaterDataFrame,qua_cntu>=0),
aes(x=longitude, y=latitude,color=qua_cntu,size=3.5))+
scale_color_continuous(low = "yellow",high = "red")+
guides(size=FALSE)
subset(WaterDataFrame,qua_cntu>=0)
install.packages("fields")
install.packages("impute")
install.packages("mlbench")
install.packages("rpart")
install.packages("arulesViz")
install.packages("datasets")
install.packages("datasets")
install.packages("rpart.plot")
install.packages("caret")
NBA1516
library(SportsAnalytics)
NBA1516<-fetch_NBAPlayerStatistics("15-16")
library(dplyr)
NBA1516
select(NBA1516,starts_with("Threes","FieldGoals"))
select(NBA1516,starts_with("Threes|FieldGoals"))
select(NBA1516,starts_with("Threes"),starts_with("FieldGoals"))
select(NBA1516,"Name",starts_with("Threes"),starts_with("FieldGoals"))
head(select(NBA1516,Name,starts_with("Threes"),starts_with("FieldGoals")))
NBA1516[,c("Name","ThreesMade","ThreesAttempted","FieldGoalsMade","FieldGoalsAttempted")]
NBA1516
##等同於
##NBA1516[,2:12]
select2<-select(NBA1516,Name:FreeThrowsAttempted)
head(select2)
sead(NBA1516[,2:12])
head(NBA1516[,2:12])
等同於NBA1516[,c(2:4,612)]
##等同於
filter1<-filter(NBA1516,TotalMinutesPlayed>2500)
##等同於
filter1<-filter(NBA1516,TotalMinutesPlayed>2500)
filter1
filter1
##等同於
filter1<-filter(NBA1516,TotalMinutesPlayed>2800)
filter1
##等同於
filter1<-filter(NBA1516,TotalMinutesPlayed>3000)
filter1
##等同於
filter1<-filter(NBA1516,TotalMinutesPlayed>2900)
filter1
##等同於
filter1<-filter(NBA1516,TotalMinutesPlayed>2800)
filter1
##等同於
filter1<-filter(NBA1516,TotalMinutesPlayed>2850)
filter1
##等同於
filter2<-filter(NBA1516,Team %in% c("BOS","SAN"))
filter2
##等同於
filter3<-filter(NBA1516,FieldGoalsMade/FieldGoalsAttempted>0.7)
head(filter3)
##等同於
filter4<-filter(NBA1516,FieldGoalsMade/FieldGoalsAttempted>0.7 & GamesPlayed>30)
head(filter4)
##等同於
mutate(NBA1516,FieldGoalsRate=FieldGoalsMade/FieldGoalsAttempted)
##等同於
mutate1<-mutate(NBA1516,FieldGoalsRate=FieldGoalsMade/FieldGoalsAttempted)
mutate1$FieldGoalsRate[1:10]
##等同於
sum1<-summarise(NBA1516,
nPlayer=n(),
nTeam=n_distinct(Team),
nPosition=n_distinct(Position()))
##等同於
sum1<-summarise(NBA1516,
nPlayer=n(),
nTeam=n_distinct(Team),
nPosition=n_distinct(Position)
sum1
##等同於
sum1<-summarise(NBA1516,
nPlayer=n(),
nTeam=n_distinct(Team),
nPosition=n_distinct(Positions)
sum1
##等同於
sum1<-summarise(NBA1516,
nPlayer=n(),
nTeam=n_distinct(Team),
nPosition=n_distinct(Position)
sum1
##等同於
sum1<-summarise(NBA1516,
nPlayer=n(),
nTeam=n_distinct(Team),
nPosition=n_distinct(Position))
sum1
NBA1516$filter1
filter1
filter1<-filter(NBA1516,TotalMinutesPlayed>2500)
sum2<-summarise(filter1,
nPlayer=n(),
meanFieldGoalsMade=mean(FieldGoalsMade),
meanFieldGoalsAttempted=mean(FieldGoalsAttempted))
sum2
sum3<-filter(NBA1516,TotalMinutesPlayed>2500)%>%
summarise(nPlayer=n(),meanFieldGoalsMade=mean(FieldGoalsMade),
meanFieldGoalsAttempted=mean(FieldGoalsAttempted))
sum3
group_by(NBA1516,Team)
group1<-summarise(NBA1516,nPlayer=n(),meanFieldGoalsMade=mean(FieldGoalsMade),
meanFieldGoalsAttempted=mean(FieldGoalsAttempted)) %>%
group_by(NBA1516,Team)
NBA1516
group1<-summarise(NBA1516,nPlayer=n(),meanFieldGoalsMade=mean(FieldGoalsMade),
meanFieldGoalsAttempted=mean(FieldGoalsAttempted)) %>%
group_by(Team)
group1<-group_by(NBA1516Team)%>%
summarise(nPlayer=n(),meanFieldGoalsMade=mean(FieldGoalsMade),
meanFieldGoalsAttempted=mean(FieldGoalsAttempted))
group1<-group_by(NBA1516,Team)%>%
summarise(nPlayer=n(),meanFieldGoalsMade=mean(FieldGoalsMade),
meanFieldGoalsAttempted=mean(FieldGoalsAttempted))
group1
NBA1516
arrange3<-group_by(NBA1516,Team,Position)%>%
summarise(nPlayer=n(),meanFieldGoalsMade=mean(FieldGoalsMade),
meanFieldGoalsAttempted=mean(FieldGoalsAttempted)) %>%
arrange(desc(meanFieldGoalsMade))
head(arrange3)
rename1<-rename(NBA1516,Po=Position)
rename1[1:5,1:5]
?ends_with
?select_helpers
#facets = . ~ Position 用守備位置Position分群畫圖(直向)
qplot(FieldGoalsAttempted, TotalPoints,
data = NBA1516,
facets = Position ~ .)
install.packages("ggmap", type = "source")
?choroplethr_wdi
??choroplethr_wdi
choroplethr_wdi(code="SP.POP.TOTL", year=2012, title="2012 Population Estimates", num_colors=1)
library(choroplethr)
choroplethr_wdi(code="SP.POP.TOTL", year=2012, title="2012 Population Estimates", num_colors=1)
library(WDI)
choroplethr_wdi(code="SP.POP.TOTL", year=2016,
title="2016 Population", num_colors=1)
choroplethr_wdi(code="SP.POP.TOTL", year=2015,
title="2015 Population", num_colors=1)
choroplethr_wdi(code="SP.DYN.LE00.IN", year=2015,
title="2015 Life Expectancy")
choroplethr_wdi(code="SP.DYN.LE00.IN", year=2015,
title="2015 Life Expectancy")
choroplethr_wdi(code="SP.DYN.LE00.IN", year=2014,
title="2015 Life Expectancy")
library(jsonlite)
WaterData<-fromJSON("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927")
WaterDataFrame<-WaterData$result$results
WaterDataFrame$longitude<-as.numeric(WaterDataFrame$longitude)
WaterDataFrame$latitude<-as.numeric(WaterDataFrame$latitude)
WaterDataFrame$qua_cntu<-as.numeric(WaterDataFrame$qua_cntu)
library(ggmap)
TaipeiMap = get_map(location = c(121.43,24.93,121.62,25.19),
zoom = 11, maptype = 'roadmap')
TaipeiMapO = ggmap(TaipeiMap)+
geom_point(data=subset(WaterDataFrame,qua_cntu>=0),
aes(x=longitude, y=latitude,color=qua_cntu,size=3.5))+
scale_color_continuous(low = "yellow",high = "red")+
guides(size=FALSE)
##資料載入
library(jsonlite)
WaterData<-fromJSON("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927")
WaterDataFrame<-WaterData$result$results
WaterDataFrame$longitude<-as.numeric(WaterDataFrame$longitude)
WaterDataFrame$latitude<-as.numeric(WaterDataFrame$latitude)
WaterDataFrame$qua_cntu<-as.numeric(WaterDataFrame$qua_cntu)
##結合ggmap
library(ggmap)
TaipeiMap = get_map(location = c(121.43,24.93,121.62,25.19),
zoom = 11, maptype = 'roadmap')
TaipeiMapO = ggmap(TaipeiMap)+
geom_point(data=subset(WaterDataFrame,qua_cntu>=0),
aes(x=longitude, y=latitude,color=qua_cntu,size=3.5))+
scale_color_continuous(low = "yellow",high = "red")+
guides(size=FALSE)
TaipeiMapO
##資料載入
library(jsonlite)
WaterData<-fromJSON("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927")
WaterDataFrame<-WaterData$result$results
WaterDataFrame$longitude<-as.numeric(WaterDataFrame$longitude)
WaterDataFrame$latitude<-as.numeric(WaterDataFrame$latitude)
WaterDataFrame$qua_cntu<-as.numeric(WaterDataFrame$qua_cntu)
##結合ggmap
library(ggmap)
TaipeiMap = get_map(location = c(121.43,24.93,121.62,25.19),
zoom = 11, maptype = 'roadmap')
TaipeiMapO = ggmap(TaipeiMap)+
geom_point(data=WaterDataFrame[WaterDataFrame$qua_cntu>=0,]),
##資料載入
library(jsonlite)
WaterData<-fromJSON("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927")
WaterDataFrame<-WaterData$result$results
WaterDataFrame$longitude<-as.numeric(WaterDataFrame$longitude)
WaterDataFrame$latitude<-as.numeric(WaterDataFrame$latitude)
WaterDataFrame$qua_cntu<-as.numeric(WaterDataFrame$qua_cntu)
##結合ggmap
library(ggmap)
TaipeiMap = get_map(location = c(121.43,24.93,121.62,25.19),
zoom = 11, maptype = 'roadmap')
TaipeiMapO = ggmap(TaipeiMap)+
geom_point(data=WaterDataFrame[WaterDataFrame$qua_cntu>=0,],
aes(x=longitude, y=latitude,color=qua_cntu,size=3.5))+
scale_color_continuous(low = "yellow",high = "red")+
guides(size=FALSE)
TaipeiMapO
fromJSON(get("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927"))
##資料載入
library(jsonlite)
library(RCurl)
WaterData<-fromJSON(getURL("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927"))
WaterDataFrame<-WaterData$result$results
WaterDataFrame$longitude<-as.numeric(WaterDataFrame$longitude)
WaterDataFrame$latitude<-as.numeric(WaterDataFrame$latitude)
WaterDataFrame$qua_cntu<-as.numeric(WaterDataFrame$qua_cntu)
##結合ggmap
library(ggmap)
TaipeiMap = get_map(location = c(121.43,24.93,121.62,25.19),
zoom = 11, maptype = 'roadmap')
TaipeiMapO = ggmap(TaipeiMap)+
geom_point(data=WaterDataFrame[WaterDataFrame$qua_cntu>=0,],
aes(x=longitude, y=latitude,color=qua_cntu,size=3.5))+
scale_color_continuous(low = "yellow",high = "red")+
guides(size=FALSE)
TaipeiMapO
WaterData<-fromJSON(getURL("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927"))
WaterData
?GET
library(httr)
?GET
if (!require('rgdal')){#for fortify()
install.packages("rgdal");library(rgdal)
}
if (!require('rgeos')){#for fortify()
install.packages("rgeos");library(rgeos)
}
if (!require('maptools')){#for readShapeSpatial()
install.packages("maptools");library(maptools)
}
tw_new <- readShapeSpatial("Taiwan/Town_MOI_1041215.shp") #檔名 請自行下載
if (!require('rgdal')){#for fortify()
install.packages("rgdal");library(rgdal)
}
if (!require('rgeos')){#for fortify()
install.packages("rgeos");library(rgeos)
}
if (!require('maptools')){#for readShapeSpatial()
install.packages("maptools");library(maptools)
}
tw_new <- readShapeSpatial("Taiwan/Town_MOI_1041215.shp") #檔名 請自行下載
readShapeSpatial("Taiwan/Town_MOI_1041215.shp")
if (!require('rgdal')){#for fortify()
install.packages("rgdal");library(rgdal)
}
if (!require('rgeos')){#for fortify()
install.packages("rgeos");library(rgeos)
}
if (!require('maptools')){#for readShapeSpatial()
install.packages("maptools");library(maptools)
}
tw_new <- readShapeSpatial("Taiwan/Town_MOI_1041215.shp") #檔名 請自行下載
if (!require('rgdal')){#for fortify()
install.packages("rgdal");library(rgdal)
}
if (!require('rgeos')){#for fortify()
install.packages("rgeos");library(rgeos)
}
if (!require('maptools')){#for readShapeSpatial()
install.packages("maptools");library(maptools)
}
tw_new <- readShapeSpatial("Taiwan/Town_MOI_1041215.shp") #檔名 請自行下載
library(ggplot2) #for fortify(), ggplot(), ggmap()
tw_new.df <- fortify(tw_new, region = "T_UID") #from ggplot2 package
mydata<-data.frame(NAME_2=tw_new$T_Name, id=tw_new$T_UID,
prevalence=rnorm(length(tw_new$T_UID)))
final.plot<-merge(tw_new.df,mydata,by="id",all.x=T)
library(RColorBrewer) #配色用brewer.pal( 9 , "Reds" )
twcmap<-ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = prevalence),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"))+
theme_void()+
labs(title="Prevalence of X in Taiwan")
twcmap
library(ggplot2) #for fortify(), ggplot(), ggmap()
head(tw_new$Town_ID)
tw_new.df <- fortify(tw_new, region = "T_UID") #from ggplot2 package
head(tw_new.df,10)
head(tw_new$Town_ID)
tw_new.df <- fortify(tw_new, region = "T_UID") #from ggplot2 package
head(tw_new.df,10)
#做一個假資料來畫
#prevalence設為亂數rnorm(需要的亂數個數)
mydata<-data.frame(NAME_2=tw_new$T_Name, id=tw_new$T_UID,
prevalence=rnorm(length(tw_new$T_UID)))
head(mydata)
head(mydata)
mydata$NAME_2<-iconv(as.character(mydata$NAME_2), #NAME_2原本是factor
from="big5", to = "UTF-8")
head(mydata,10)
final.plot<-merge(tw_new.df,mydata,by="id",all.x=T)
head(final.plot,10)
最後將有prevalence的假數據mydata和經緯度資料tw_new.df合併, 用merge()
"1">"a"
"1"<"a"
"a"<"A"
"apple"<"Apple"
"apple"<"Apple"
"Apple"<"orange"
"apple"<"orange"
"A"<"o"
"A"<"b"
##資料載入
library(jsonlite)
library(RCurl)
WaterData<-fromJSON(getURL("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927"))
WaterDataFrame<-WaterData$result$results
WaterDataFrame$longitude<-as.numeric(WaterDataFrame$longitude)
WaterDataFrame$latitude<-as.numeric(WaterDataFrame$latitude)
WaterDataFrame$qua_cntu<-as.numeric(WaterDataFrame$qua_cntu)
##結合ggmap
library(ggmap)
TaipeiMap = get_map(location = c(121.43,24.93,121.62,25.19),
zoom = 11, maptype = 'roadmap')
TaipeiMapO = ggmap(TaipeiMap)+
geom_point(data=WaterDataFrame[WaterDataFrame$qua_cntu>=0,],
aes(x=longitude, y=latitude,color=qua_cntu,size=3.5))+
scale_color_continuous(low = "yellow",high = "red")+
guides(size=FALSE)
TaipeiMapO
TaipeiMap = get_map(location = c(121.43,24.93,121.62,25.19),
zoom = 14, maptype = 'roadmap')
ggmap(TaipeiMap,extent = 'device') #extent = 'device' 滿版
twcmap
twcmap
library(devtools)
library(treemapify)
data(G20)#範例資料
head(G20)
G20
?G20
?airquality
airquality[,.(Ozone=mean(Ozone)),by=Month]
airquality[,.(Ozone=mean(Ozone)),by=Month]
data.table(airquality)[,.(Ozone=mean(Ozone)),by=Month]
library(datasets)
library(data.table)
airquality$Month<-as.factor(airquality$Month) #將Month轉為因子變項
data.table(airquality)[,.(Ozone=mean(Ozone)),by=Month]
str(airquality)
data.table(airquality)[,.(OzoneMean=mean(Ozone)),by=Month]
airquality
data.table(airquality)[,.(OzoneMean=mean(Ozone,na.rm = T)),by=Month]
library(datasets)
library(data.table)
airquality$Month<-as.factor(airquality$Month) #將Month轉為因子變項
airquality.mean<-data.table(airquality)[,.(OzoneMean=mean(Ozone,na.rm = T)),by=Month] #計算每月Ozone平均
ggplot()+geom_bar(data=airquality.mean,aes(x=Month,y=Ozone),
stat = "identity") #stat = "identity" 直接畫數字
library(datasets)
library(data.table)
airquality$Month<-as.factor(airquality$Month) #將Month轉為因子變項
airquality.mean<-data.table(airquality)[,.(OzoneMean=mean(Ozone,na.rm = T)),by=Month] #計算每月Ozone平均
ggplot()+geom_bar(data=airquality.mean,aes(x=Month,y=OzoneMean),
stat = "identity") #stat = "identity" 直接畫數字
data.table(airquality)[,.(OzoneMean=mean(Ozone,na.rm = T),OzoneSD=sd(Ozone)),by=Month]
library(datasets)
library(data.table)
airquality$Month<-as.factor(airquality$Month) #將Month轉為因子變項
airquality.stat<-data.table(airquality)[,.(OzoneMean=mean(Ozone,na.rm = T),OzoneSD=sd(Ozone,na.rm = T)),by=Month] #計算每月Ozone平均與標準差
ggplot(data=airquality.stat)+ #資料airquality.eb
geom_bar(aes(x=Month,y=OzoneMean),stat = "identity")+
geom_errorbar( #ymin低點, ymax高點
aes(x=Month,ymin=OzoneMean-OzoneSD,OzoneMean=Ozone.x+OzoneSD), width=.1)
library(datasets)
library(data.table)
airquality$Month<-as.factor(airquality$Month) #將Month轉為因子變項
airquality.stat<-data.table(airquality)[,.(OzoneMean=mean(Ozone,na.rm = T),OzoneSD=sd(Ozone,na.rm = T)),by=Month] #計算每月Ozone平均與標準差
ggplot(data=airquality.stat)+ #資料airquality.eb
geom_bar(aes(x=Month,y=OzoneMean),stat = "identity")+
geom_errorbar( #ymin低點, ymax高點
aes(x=Month,ymin=OzoneMean-OzoneSD,ymax=OzoneMean+OzoneSD), width=.1)
data(G20)#範例資料
str(G20)
data(G20)#範例資料
str(G20)
data(G20)#範例資料
str(G20)
G20
?G20
?devtools
devtools::install_github("yijutseng/DataAnalyticsWithRBook")
?install_github
devtools::install_github("yijutseng/DataAnalyticsWithRBook")
devtools::install_github("hadley/r4ds")
devtools::install_github("yijutseng/DataAnalyticsWithRBook")
devtools::install_github("yijutseng/DataAnalyticsWithRBook")
?DataAnalyticsWithRBook
