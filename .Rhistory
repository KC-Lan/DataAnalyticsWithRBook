news_url="http://news.ltn.com.tw/list/BreakingNews"
title_css = html(news_url) %>% html_nodes(".picword") %>% html_text()
my_news = data.frame(title = title_css)
head(my_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_xpath = read_html(CGUurl) %>% html_nodes("//*[@summary=’list’]/td/a") %>% html_text()
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_xpath = read_html(CGUurl) %>% html_nodes("//*[@summary=’list’]/tr/td/a") %>% html_text()
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_xpath = read_html(CGUurl) %>% html_nodes("/*[@summary=’list’]/tr/td/a") %>% html_text()
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_xpath = read_html(CGUurl) %>% html_nodes("[@summary=’list’]/tr/td/a") %>% html_text()
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = html(CGUurl) %>% html_nodes(".mm01 a") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = html(CGUurl) %>% html_nodes(".mm_01 a") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGU_news
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = html(CGUurl) %>% html_nodes(".baseTB listSD a") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes(".baseTB listSD a") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes(".[baseTB listSD] a") %>% html_text()
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes(".ptname a") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes(".td.mc a") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes(".listSD td.mc a") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes(".listSD td.mc") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes(".listSD") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes(".td.mc") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("//span[@class='ptname ']") %>% html_text()
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("//span[@class='ptname']") %>% html_text()
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("//*span[@class='ptname']") %>% html_text()
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("span[@class='ptname']") %>% html_text()
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("//*[@class='ptname']") %>% html_text()
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("span [@class='ptname']") %>% html_text()
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("span .ptname") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("table tr td span .ptname") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("table tr td span") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("table tr td span .ptname") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("table tr td span") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("table tr td span a") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGU_news
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("#aa19fbac6ec85f70fe384ac00f179c841_Div table . tr td span a") %>% html_text()
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("#aa19fbac6ec85f70fe384ac00f179c841_Div table tr td span a") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("#aa19fbac6ec85f70fe384ac00f179c841_Div") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("#aa19fbac6ec85f70fe384ac00f179c841_Div table tr td span") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
news_css = read_html(CGUurl) %>% html_nodes("#aa19fbac6ec85f70fe384ac00f179c841_Div table tr td span")
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("#sm_div_aa19fbac6ec85f70fe384ac00f179c841_0_Dyn_2_2 table tr td span") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("#sm_div_aa19fbac6ec85f70fe384ac00f179c841_0_Dyn_2_2 .mc .ptname") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes(".mc .ptname") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes(".col_02 .mc .ptname") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes(".col_02") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
news_css = read_html(CGUurl) %>% html_nodes(".col_02")
CGUurl="http://im.cgu.edu.tw/bin/home.php"
news_css = read_html(CGUurl) %>% html_nodes("td .col_02") %>% html_text()
CGU_news = data.frame(title = news_css)
head(CGU_news)
YahooNewsurl="https://tw.news.yahoo.com/"
news_css = read_html(YahooNewsurl) %>% html_nodes(".yom-list") %>% html_text()
Yahoo_news = data.frame(title = news_css)
head(Yahoo_news)
View(Yahoo_news)
news_url = read_html(YahooNewsurl) %>% html_nodes(".yom-list") %>% html_text(herf)
news_url = read_html(YahooNewsurl) %>% html_nodes(".yom-list") %>% html_text("herf")
news_url = read_html(YahooNewsurl) %>% html_nodes(".yom-list") %>% html_attr("herf")
YahooNewsurl="https://tw.news.yahoo.com/"
news_title = read_html(YahooNewsurl) %>% html_nodes(".yom-list") %>% html_text()
news_url = read_html(YahooNewsurl) %>% html_nodes(".yom-list") %>% html_attr("href")
Yahoo_news = data.frame(title = news_css, url=news_url)
head(Yahoo_news)
news_url
YahooNewsurl="https://tw.news.yahoo.com/"
news_title = read_html(YahooNewsurl) %>% html_nodes(".yom-list") %>% html_text()
news_url = read_html(YahooNewsurl) %>% html_nodes(".yom-list a") %>% html_attr("href")
Yahoo_news = data.frame(title = news_css, url=news_url)
YahooNewsurl="https://tw.news.yahoo.com/"
news_title = read_html(YahooNewsurl) %>% html_nodes(".yom-list a") %>% html_text()
news_url = read_html(YahooNewsurl) %>% html_nodes(".yom-list a") %>% html_attr("href")
Yahoo_news = data.frame(title = news_css, url=news_url)
news_url
YahooNewsurl="https://tw.news.yahoo.com/"
news_title = read_html(YahooNewsurl) %>% html_nodes(".yom-list a") %>% html_text()
news_url = read_html(YahooNewsurl) %>% html_nodes(".yom-list a .title") %>% html_attr("href")
Yahoo_news = data.frame(title = news_css, url=news_url)
YahooNewsurl="https://tw.news.yahoo.com/"
news_title = read_html(YahooNewsurl) %>% html_nodes(".yom-list a") %>% html_text()
news_url = read_html(YahooNewsurl) %>% html_nodes(".yom-list a") %>% html_attr("href")
Yahoo_news = data.frame(title = news_css, url=news_url)
news_url
YahooNewsurl="https://tw.news.yahoo.com/"
news_title = read_html(YahooNewsurl) %>% html_nodes(".tpl-title a") %>% html_text()
news_url = read_html(YahooNewsurl) %>% html_nodes(".tpl-title a") %>% html_attr("href")
Yahoo_news = data.frame(title = news_css, url=news_url)
head(Yahoo_news)
YahooNewsurl="https://tw.news.yahoo.com/"
news_title = read_html(YahooNewsurl) %>% html_nodes(".tpl-title a") %>% html_text()
news_url = read_html(YahooNewsurl) %>% html_nodes(".tpl-title a") %>% html_attr("href")
Yahoo_news = data.frame(title = news_title, url=news_url)
head(Yahoo_news)
head(Yahoo_news)
factanal(3)
factorial(3)
Inf/Inf
-2.5:-3.9
x<-c(10,NA,3,8)
x[x>6]
x<-c(10,Inf,3,8)
x>6
any(x>6)
seq(-10,10,15)
matrix(1:9,nrow=3)
matrix(1:9,nrow=3) %*% matrix(1:8,nrow=2)
matrix(1:9,nrow=3) %*% matrix(1:6,nrow=3)
diag(2,3/5)
diag(2,3,5)
a<-c(1,2,3,4)
a[[1]]
b<-list(1,2,3,4)
b[[1]]
cbind(list(c("a","b"),c("M","F")),list(c(1,2),c(3,4)))
rbind(list(c("a","b"),c("M","F")),list(c(1,2),c(3,4)))
rbind(list(,c("M","F")),list(c(1,2),c(3,4)))
x<-c("a","b")
y<-c("M","F")
list(x,y)
z<-c(1,2)
w<-c(3,4)
cbind(list(x,y),list(z,w))
strsplit("a b"," ")
paste(LETTERS[1:3],c(1:3))
ca9
?cat
iris[,"Species"]
iris[,"Species",drop=F]
Inf-Inf
Inf=Inf
Inf+Inf
Inf+1010
class(c(1,2,))
class(c(1,2))
`substr<-`()
substr(,x = )
install.packages("shiny")
install.packages("plotly")
library(plotly)
library(plotly)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = ~carat, y = ~price, color = ~carat,
size = ~carat, text = ~paste("Clarity: ", clarity))
install.packages("ggvis")
p <- ggvis(mtcars, x = ~wt, y = ~mpg)
library(ggvis)
p <- ggvis(mtcars, x = ~wt, y = ~mpg)
layer_points(p)
p<-ggvis(mtcars,~wt)
layer_histograms(p,width =  input_slider(0, 2, step = 0.10, label = "width"),
center = input_slider(0, 2, step = 0.05, label = "center"))
install.packages("googleVis")
library(googleVis)
demo(googleVis)
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity))) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
?
geom_point
# e+01: 10^1 / e-04: 10^(-4)
glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted,
data =NBA1516)
#讀入SportsAnalytics package
library(SportsAnalytics)
#擷取2015-2016年球季球員資料
NBA1516<-fetch_NBAPlayerStatistics("15-16")
library(ggplot2)
ggplot(NBA1516,aes(x=TotalMinutesPlayed,y=TotalPoints))+
geom_point()+geom_smooth(method = "glm")
# formula: Y~X1+X2+...+Xn  Y:依變項 X:自變項
# data: 資料
glm(TotalPoints~TotalMinutesPlayed,data =NBA1516)
# e+01: 10^1 / e-04: 10^(-4)
glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted,
data =NBA1516)
glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted+Position,
data =NBA1516)
# e+01: 10^1 / e-04: 10^(-4)
mydata <- read.csv("http://www.ats.ucla.edu/stat/data/binary.csv")
# GRE:某考試成績, GPA:在校平均成績, rank:學校聲望
head(mydata)
mydata$rank <- factor(mydata$rank)
mylogit <- glm(admit ~ gre + gpa + rank,
data = mydata, family = "binomial")
sum<-summary(mylogit)
sum$coefficients
if (!require('rpart')){
install.packages("rpart")
library(rpart)
}
library(rpart)
DT<-rpart(Position~Blocks+ThreesMade+Assists+Steals,data=NBA1516)
DT
#控球後衛（PG）、得分後衛（SG）、小前鋒（SF）、大前鋒（PF）和中鋒（C）
library(rpart.plot)
prp(DT)					# Will plot the tree
par(mfrow=c(1,1), mar = rep(1,4)) #下,左,上,右
plot(DT)
text(DT, use.n=F, all=F, cex=1)
#控球後衛（PG）、得分後衛（SG）、小前鋒（SF）、大前鋒（PF）和中鋒（C）
sessionInfo()
library("data.table", lib.loc="~/R/win-library/3.3")
detach("package:data.table", unload=TRUE)
test<-fread("E:/sascnsertr_year.csv",sep = ",")
library(data.table)
test<-fread("E:/sascnsertr_year.csv",sep = ",")
test<-fread("E:/sascnsertr_year.csv",sep = ",")
test<-fread("E:/sascnsertr_year.csv",sep = ",")
install.packages("choroplethr")
install.packages("choroplethrMaps")
library(WDI)
choroplethr_wdi(code="SP.POP.TOTL", year=2015,
title="2015 Population", num_colors=1)
library(choroplethr)
library(WDI)
choroplethr_wdi(code="SP.POP.TOTL", year=2015,
title="2015 Population", num_colors=1)
choroplethr_wdi(code="SP.DYN.LE00.IN", year=2014,
title="2014 Life Expectancy")
library(WDI)
choroplethr_wdi(code="SP.POP.TOTL", year=2015,
title="2015 Population", num_colors=1)
?
choroplethr_wdi
library(WDI)
choroplethr_wdi(code="SP.POP.TOTL", year=2014,
title="2015 Population", num_colors=1)
choroplethr_wdi(code="SP.DYN.LE00.IN", year=2014,
title="2014 Life Expectancy")
choroplethr_wdi(code="SP.POP.TOTL", year=2012, title="2012 Population Estimates", num_colors=1)
library(WDI)
choroplethr_wdi(code="SP.POP.TOTL", year=2012, title="2012 Population Estimates", num_colors=1)
library(choroplethr)
choroplethr_wdi(code="SP.POP.TOTL", year=2012, title="2012 Population Estimates", num_colors=1)
install.packages("treemapify")
library(treemapify)
install_github("wilkox/treemapify")
library(devtools)
install_github("wilkox/treemapify")
install_github("wilkox/ggfittext")
library(devtools)
install_github("wilkox/ggfittext")
install_github("wilkox/treemapify")
library(treemapify)
install.packages("treemap")
treemap(G20,
index=c("Region", "Country"),
vSize="Nom.GDP.mil.USD",
vColor="HDI",
type="value")
library(treemap)
treemap(G20,
index=c("Region", "Country"),
vSize="Nom.GDP.mil.USD",
vColor="HDI",
type="value")
data(G20)#範例資料
library(datasets)
data(G20)#範例資料
treemap(GNI2010,
index=c("continent", "iso3"),
vSize="population",
vColor="GNI",
type="value")
data(GNI2010)
library(treemap)
data(GNI2010)
treemap
?treemap
treemap(GNI2014,
index=c("continent", "iso3"),
vSize="population",
vColor="GNI",
type="value")
data(GNI2014)
treemap(GNI2014,
index=c("continent", "iso3"),
vSize="population",
vColor="GNI",
type="value")
install.packages("ggvis")
install.packages("googleVis")
install.packages(c('fields','arules','datasets','arulesViz','MASS','caret','purrr','treemap'))
install.packages(c("fields", "arules", "datasets", "arulesViz", "MASS", "caret", "purrr", "treemap"))
install.packages(c("fields", "arules", "datasets", "arulesViz", "MASS", "caret", "purrr", "treemap"))
install.packages(c("fields", "arules", "datasets", "arulesViz", "MASS", "caret", "purrr", "treemap"))
devtools::install_github("rstudio/tensorflow")
install.packages("Rcpp")
install.packages("Rcpp")
devtools::install_github("rstudio/tensorflow")
library(tensorflow)
sess = tf$Session()
hello <- tf$constant('Hello, TensorFlow!')
sess$run(hello)
TENSORFLOW_PYTHON
Sys.getenv("TENSORFLOW_PYTHON")
Sys.getenv(TENSORFLOW_PYTHON)
# Create 100 phony x, y data points, y = x * 0.1 + 0.3
x_data <- runif(100, min=0, max=1)
y_data <- x_data * 0.1 + 0.3
# Try to find values for W and b that compute y_data = W * x_data + b
# (We know that W should be 0.1 and b 0.3, but TensorFlow will
# figure that out for us.)
W <- tf$Variable(tf$random_uniform(shape(1L), -1.0, 1.0))
b <- tf$Variable(tf$zeros(shape(1L)))
y <- W * x_data + b
# Minimize the mean squared errors.
loss <- tf$reduce_mean((y - y_data) ^ 2)
optimizer <- tf$train$GradientDescentOptimizer(0.5)
train <- optimizer$minimize(loss)
# Launch the graph and initialize the variables.
sess = tf$Session()
sess$run(tf$global_variables_initializer())
# Fit the line (Learns best fit is W: 0.1, b: 0.3)
for (step in 1:201) {
sess$run(train)
if (step %% 20 == 0)
cat(step, "-", sess$run(W), sess$run(b), "\n")
}
install.packages("drat", repos="https://cran.rstudio.com")
drat:::addRepo("dmlc")
install.packages("mxnet")
require(mlbench)
install.packages('prophet')
Warning in install.packages :
package ‘prophet’ is not available (for R version 3.3.2)
Sys.getenv('PATH')
install.packages('prophet', repos='http://cran.us.r-project.org')
library(prophet)
library(dplyr)
df <- read.csv('../examples/example_wp_peyton_manning.csv') %>%
mutate(y = log(y))
df <- read.csv('https://raw.githubusercontent.com/facebookincubator/prophet/master/examples/example_wp_peyton_manning.csv') %>%
mutate(y = log(y))
m <- prophet(df)
m <- prophet(df)
future <- make_future_dataframe(m, periods = 365)
tail(future)
forecast <- predict(m, future)
tail(forecast[c('ds', 'yhat', 'yhat_lower', 'yhat_upper')])
plot(m, forecast)
prophet_plot_components(m, forecast)
library("ggplot2")
?ggplot
iris$Species[2]<-"versicolor"
head(iris$Species)
iris[1,2] ##第一列Row，第二行Column
iris[1:3,] ##第1~3列Row，所有的行Column
iris[,"Species"] ##所有的列Row，名稱為Species的行Column
iris[1:10,c(T,F,T,F,T)] ##第1~10列Row，第1,3,5行Column (TRUE)
iris[,"Species"]
iris[1,2] ##第一列Row，第二行Column
iris[1:3,] ##第1~3列Row，所有的行Column
iris[,"Species"] ##所有的列Row，名稱為Species的行Column
iris[1:10,c(T,F,T,F,T)] ##第1~10列Row，第1,3,5行Column (TRUE)
iris[1,2] ##第一列Row，第二行Column
iris[1:3,] ##第1~3列Row，所有的行Column
iris[,"Species"] ##所有的列Row，名稱為Species的行Column
iris[1:10,c(T,F,T,F,T)]
iris$Species ##所有的列Row，名稱為Species的行Column
iris$Species
data("iris")
iris
data(iris)
iris$Tes<-""
iris
iris
iris$Tes<-""
iris
iris$Tes<-""
str(iris)
data(iris)
str(iris)
library(pkg)
pkg<-c('ggplot2', 'dplyr','lubridate','bit64','bookdown','knitr','rmarkdown','RCurl','data.table','stringr','reshape2','SportsAnalytics','readr','readxl','jsonlite','XML','Rfacebook','rvest','rgdal','rgeos','maptools','ggmap','choroplethr','choroplethrMaps','WDI','treemapify','shiny','plotly','ggvis','googleVis','rpart',
'rpart.plot','fields','arules','datasets','arulesViz','MASS','caret','purrr','treemap')
library(pkg)
?library
library(pkg, character.only = TRUE)
lapply(pkg, library, character.only = TRUE)
library(SportsAnalytics)
NBA1516<-fetch_NBAPlayerStatistics("15-16")
##等同於
##NBA1516[,c("Name","ThreesMade","ThreesAttempted","FieldGoalsMade","FieldGoalsAttempted")]
select1<-select(NBA1516,Name,starts_with("Threes"),starts_with("FieldGoals"))
##等同於
##NBA1516[,c("Name","ThreesMade","ThreesAttempted","FieldGoalsMade","FieldGoalsAttempted")]
select1<-dplyr::select(NBA1516,Name,starts_with("Threes"),starts_with("FieldGoals"))
head(select1)
packageVersion("snow")
packageVersion(")
packageVersion()
?
packageVersion
options(
htmltools.dir.version = FALSE, formatR.indent = 2, width = 80, digits = 2
)
pkg<-c('ggplot2', 'dplyr','lubridate','bit64','bookdown','knitr','rmarkdown','RCurl','data.table','stringr','reshape2','SportsAnalytics','readr','readxl','jsonlite','XML','Rfacebook','rvest','rgdal','rgeos','maptools','ggmap','choroplethr','choroplethrMaps','WDI','treemapify','shiny','plotly','ggvis','googleVis','rpart',
'rpart.plot','fields','arules','datasets','arulesViz','MASS','caret','purrr','treemap')
lapply(c(), function(pkg) {
if (system.file(package = pkg) == '') install.packages(pkg)
})
#lapply(pkg, library, character.only = TRUE)
packageDescription(pkg, fields = "Version", drop = FALSE)
packageDescription(pkg, fields = "Version")
lapply(pkg, packageDescription, fields = c("Package", "Version"))
sapply(pkg, packageDescription, fields = c("Package", "Version"))
pkgInfo<-sapply(pkg, packageDescription, fields = c("Package", "Version"))
str(pkgInfo)
pkgInfo<-lapply(pkg, packageDescription, fields = c("Package", "Version"))
str(pkgInfo)
lapply(pkgInfo, `[[`, 1)
sapply(pkgInfo, `[[`, 1)
data.frame(Package=sapply(pkgInfo, `[[`, 1),
Version=sapply(pkgInfo, `[[`, 1))
data.frame(Package=sapply(pkgInfo, `[[`, 1),
Version=sapply(pkgInfo, `[[`, 2))
sum<-0
for(i in 1:5){
sum<-sum+i
print("i=")
print(i)
print("sum=")
print(sum)
}
sum<-0
for(i in 1:5){
sum<-sum+i
print(i)
print(sum)
}
